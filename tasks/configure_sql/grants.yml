---
- name: CLICKHOUSE | List perms and privs (SQL-driven)
  ansible.builtin.command: |
    {{ clickhouse_connection_string }}
    -q
    "SELECT user_name, role_name,
      ifNull(database, '*') AS database ,
      ifNull(table, '*') AS table,
      ifNull(column, '*') AS column,
      arrayCompact(groupArray(access_type)) AS access_type,
      grant_option
    FROM system.grants
    RIGHT JOIN system.users u ON user_name = u.name AND u.storage = 'local directory'
    WHERE (user_name in ({{ '' ~ item.to ~ '' | join(', ') }}) or (role_name in ({{ '' ~ item.to ~ '' | join(', ') }})))
    AND database in ({{ '' ~ item.databases ~ '' | join(', ') }})
    AND table in ({{ '' ~ item.tables ~ '' | join(', ') }})
    GROUP BY user_name, role_name, database, table, column, grant_option
    FORMAT JSON;"
  changed_when: False
  register: clickhouse_existing_sql_grants
  tags: [config_grants]

- name: CLICKHOUSE | Set var with the perms and privs listed
  ansible.builtin.set_fact:
    actual_privs: "{{ (clickhouse_existing_sql_grants.stdout | from_json)['data'] }}"
  tags: [config_grants]

# All logic of this revokes and grants are in the template because of "speed performance" instead of ansible task doing the loop
- name: CLICKHOUSE | Revoke user and roles grants missing (SQL-driven)
  ansible.builtin.command: |
    {{ clickhouse_connection_string }}
    --multiquery -q {{ lookup('template', 'DDL/REVOKE.j2') | quote }}
  when: actual_privs is defined
  register: revoke_grants_missing
  changed_when: revoke_grants_missing.rc != 0
  tags: [config_grants]

- name: CLICKHOUSE | Do Grants for users and roles (SQL-driven)
  ansible.builtin.command: |
    {{ clickhouse_connection_string }}
    --multiquery -q {{ lookup('template', 'DDL/GRANT.j2') | quote }}
  when:
    - item.privileges is defined
  register: do_grants
  changed_when: do_grants.rc != 0
  tags: [config_grants]
